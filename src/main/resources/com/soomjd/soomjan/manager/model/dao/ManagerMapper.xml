<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soomjd.soomjan.manager.model.dao.ManagerMapper">
    
     <resultMap id="ssackResultSet" type="MemberDTO">
        <id column="EMAIL" property="email"/>
        <result column="NICKNAME" property="nickName"/>
        <result column="PASSWORD" property="password"/>
        <result column="PHONE" property="phone"/>
        <result column="IS_JANDI" property="isJandi"/>
        <result column="WARNING" property="warning"/>
        <result column="IS_BLACK" property="isBlack"/>
        <result column="ENROLL_DATE" property="enrollDate"/>
        <result column="IS_EXIT" property="isExit"/>
        <result column="NAME" property="name"/>
    </resultMap>
    
    <resultMap type="com.soomjd.soomjan.jandi.model.dto.JandiDTO" id="jandiResultSet">
    	<id column="EMAIL" property="email"/>
    	<result column="NICKNAME" property="nickName"/>
    	<result column="CAREER" property="career"/>
    	<result column="INTRO" property="intro"/>
    	<result column="PROFILE_PATH" property="profile_path"/>
    	<result column="ENROLL_DATE" property="enroll_date"/>
    	<result column="ACCOUNT" property="account"/>
    	<result column="BANK" property="bank"/>
    	<result column="ACC_NAME" property="acc_name"/>
    	<result column="TITLE" property="title"/>
    </resultMap>
    
    <resultMap id="managerResultSet" type="ManagerDTO">
    	<id column="MNG_NO" property="mngNo"/>
    	<result column="MNG_ID" property="mngId"/>
    	<result column="PASSWORD" property="password"/>
    	<result column="MNG_NAME" property="mngName"/>
    	<result column="CREATE_DATE" property="createDate"/>
    	<result column="IS_DELETED" property="isDeleted"/>
    	<result column="MNG_NICKNAME" property="mngNickName"/>
    </resultMap>
    
    <resultMap id="categoryResult" type="CategoryDTO">
    	<id column="CATEGORY_CODE" property="categoryCode"/>
    	<result column="CATEGORY_NAME" property="categoryName"/>
    </resultMap>
    
    <resultMap id="faqResult" type="FaqDTO">
    	<id column="POST_CODE" property="postCode"/>
    	<result column="TITLE" property="title"/>
    	<result column="CONTENTS" property="contents"/>
    	<result column="WRITE_DATE" property="writeDate"/>
    	<result column="IS_DELETED" property="isDeleted"/>
    	<result column="MNG_NO" property="mngNo"/>
    </resultMap>
    
      <resultMap type="com.soomjd.soomjan.classRoom.model.dto.ClassDTO" id="classResultMap">
    	<id column="CLASS_CODE" property="classCode"/>
    	<result column="CREATE_DATE" property="createDate"/>
    	<result column="CONTENTS" property="contents"/>
    	<result column="TAG" property="tag"/>
    	<result column="CATEGORY_CODE" property="categoryCode"/>
    	<result column="EMAIL" property="email"/>
    	<result column="BOARD_TYPE" property="boardType"/>
    	<result column="VIEWS" property="views"/>
    	<result column="MAX_COUNT" property="maxCount"/>
    	<result column="TITLE" property="title"/>
    	<result column="PRICE" property="price"/>
    	<result column="NICKNAME" property="nickName" />
    </resultMap>
    
    <resultMap id="paymentResultSet" type="PaymentDTO">
        <id column="PAY_CODE" property="payCode"/>
        <result column="PAY" property="pay"/>
        <result column="BANK" property="bank"/>
        <result column="OWNER" property="owner"/>
        <result column="ACCOUNT" property="account"/>
        <result column="PAY_DATE" property="payDate"/>
        <result column="PAY_TYPE" property="payType"/>
    </resultMap>
    
      <resultMap id="purchaseClassSet" type="PurchaseClassDTO">
        <id column="CLASS_PURC_CODE" property="classPurcCode"/>
        <result column="EMAIL" property="email"/>
        <result column="CLASS_CODE" property="classCode"/>
        <result column="STATUS" property="status"/>
        <result column="PAY_CODE" property="payCode"/>
        <result column="END_DATE" property="endDate"/>
        <result column="TEACHER" property="teacher"/>
        
        <association property="classDTO" resultMap="classResultMap"></association>
        <association property="paymentDTO" resultMap="paymentResultSet"></association>
        <association property="calculateDTO" resultMap="calculateDTO"></association>
    </resultMap>
    
    <resultMap id="reportMemberResultSet" type="ReportMemberDTO">
        <id column="REP_CODE" property="repCode"/>
        <result column="EMAIL" property="email"/>
        <result column="CONTENTS" property="contents"/>
        <result column="REP_DATE" property="repDate"/>
        <result column="REP_EMAIL" property="repEmail"/>
        <result column="REP_TYPE_CODE" property="repTypeCode"/>
        <result column="IMG_PATH" property="imgPath"/>
        <result column="REP_YN" property="repYn"/>
        <result column="NICKNAME" property="nickName"/>
        
        <association property="reportStatementDTO" resultMap="reportStatementResultSet"></association>
    </resultMap>
    
    <resultMap id="reportStatementResultSet" type="ReportStatementDTO">
    	<id column="REP_TYPE_CODE" property="repTypeCode"/>
    	<result column="REP_TYPE" property="repType"/>
    </resultMap>
    
    <resultMap id="calculateDTO" type="CalculateDTO">
    	<id column="CALC_CODE" property="calCode"/>
    	<result column="FEES" property="fees"/>
    	<result column="EMAIL" property="email"/>
    	<result column="CLASS_PURC_CODE" property="classPurchaseCode"/>
    	<result column="CAL_DATE" property="calDate"/>
    </resultMap>
    
    <resultMap id="reportClassResultSet" type="ReportClassDTO">
        <id column="REP_CODE" property="repCode"/>
        <result column="EMAIL" property="email"/>
        <result column="REP_CONTENTS" property="repContents"/>
        <result column="CLASS_CODE" property="classCode"/>
        <result column="REP_DATE" property="repDate"/>
        <result column="REP_TYPE_CODE" property="repTypeCode"/>
        <result column="REP_YN" property="repYn"/>
        <result column="CATEGORY_NAME" property="categoryName"/>
        <result column="NICKNAME" property="nickName" />
        
        <association property="classDTO" resultMap="classResultMap"></association>
        <association property="reportStatementDTO" resultMap="reportStatementResultSet"></association>
    </resultMap>
    
  <!--  <select id="selectMember" resultMap="memberResultSet" parameterType="ssackDTO">
        SELECT
		       A.EMAIL
			 , A.NICKNAME
			 , A.PASSWORD
			 , A.PHONE
			 , A.IS_JANDI
			 , A.WARNING
			 , A.IS_BLACK
			 , A.ENROLL_DATE
			 , A.IS_EXIT
			 , A.NAME
		  FROM SSACK_TBL A
    </select> -->

	<!-- 매니저 로그인 비밀번호 확인 -->
	<select id="selectEncPassword" resultType="java.lang.String" parameterType="ManagerDTO">
        SELECT
		       A.PASSWORD
		  FROM MANAGER_TBL A
		 WHERE A.MNG_ID = #{ mngId }
		   AND IS_DELETED = 'N'
    </select>
    
    <select id="selectManager" resultMap="managerResultSet" parameterType="ManagerDTO">
        SELECT
		       A.MNG_NO
			 , A.MNG_ID
			 , A.PASSWORD
			 , A.MNG_NAME
			 , A.CREATE_DATE
			 , A.IS_DELETED
			 , A.MNG_NICKNAME
		    FROM MANAGER_TBL A
		 WHERE A.MNG_ID = #{ mngId }
		   AND IS_DELETED = 'N'
    </select>
    
    <select id="allManager" resultMap="managerResultSet" parameterType="ManagerDTO">
    
     SELECT
		       A.MNG_NO
			 , A.MNG_ID
			 , A.PASSWORD
			 , A.MNG_NAME
			 , A.CREATE_DATE
			 , A.IS_DELETED
			 , A.MNG_NICKNAME
		    FROM MANAGER_TBL A
		 WHERE IS_DELETED = 'N'
    </select>
    
    <select id="ssackMember" resultMap="ssackResultSet">

		SELECT
		       F.RNUM
		     , F.EMAIL
		     , F.NICKNAME
		     , F.PASSWORD
		     , F.PHONE
		     , F.IS_JANDI
		     , F.WARNING
		     , F.IS_BLACK
		     , F.ENROLL_DATE
		     , F.IS_EXIT
		     , F.NAME
		 FROM (SELECT ROWNUM RNUM
		 	        , D.EMAIL
		 	        , D.NICKNAME
		 	        , D.PASSWORD
		 	        , D.PHONE
		 	        , D.IS_JANDI
		 	        , D.WARNING
		 	        , D.IS_BLACK
		 	        , D.ENROLL_DATE
		 	        , D.IS_EXIT
		 	        , D.NAME
		 	     FROM (SELECT
		 	     		      A.EMAIL
		 	     		    , A.NICKNAME
		 	     		    , A.PASSWORD
		 	     		    , A.PHONE
		 	     		    , A.IS_JANDI
		 	     		    , A.WARNING
		 	     		    , A.IS_BLACK
		 	     		    , A.ENROLL_DATE
		 	     		    , A.IS_EXIT
		 	     		    , A.NAME
		 	     		 FROM SSACK_TBL A
		 	     		 <where>
		 	     		 	<if test='searchCondition == "1"'>
		 	     		 		A.NICKNAME LIKE '%' || #{ searchValue } || '%'
		 	     		 	</if>
		 	     		 	<if test='searchCondition == "2"'>
		 	     		 		AND A.EMAIL LIKE '%' || #{ searchValue } || '%'
		 	     		 	</if>
		 	     		 	<if test='searchCondition == "3"'>
		 	     		 		AND A.NAME LIKE '%' || #{ searchValue } || '%'
		 	     		 	</if>
		 	     		 </where>
		 	     	 ORDER BY A.ENROLL_DATE DESC
		 	    	  ) D
		 	    <![CDATA[
	        	WHERE ROWNUM <= #{ endRow } 
	        	]]>	
	        	) F
     			WHERE F.RNUM >= #{ startRow }	  	 
	</select>
	
	<select id="jandiMember" resultMap="jandiResultSet">
				SELECT
		       F.RNUM
		     , F.NICKNAME
		     , F.CAREER
		     , F.INTRO
		     , F.PROFILE_PATH
		     , F.ENROLL_DATE
		     , F.ACCOUNT
		     , F.BANK
		     , F.ACC_NAME
		     , F.EMAIL
		 FROM (SELECT ROWNUM RNUM
		 	        , D.NICKNAME
		 	        , D.CAREER
		 	        , D.INTRO
		 	        , D.PROFILE_PATH
		 	        , D.ENROLL_DATE
		 	        , D.ACCOUNT
		 	        , D.BANK
		 	        , D.ACC_NAME
		 	        , D.EMAIL
		 	     FROM (SELECT
		 	     		      A.NICKNAME
		 	     		    , A.CAREER
		 	     		    , A.INTRO
		 	     		    , A.PROFILE_PATH
		 	     		    , A.ENROLL_DATE
		 	     		    , A.ACCOUNT
		 	     		    , A.BANK
		 	     		    , A.ACC_NAME
		 	     		    , A.EMAIL
		 	     		 FROM JANDI_TBL A
		 	     		 <where>
		 	     		 	<if test='searchCondition == "1"'>
		 	     		 		A.NICKNAME LIKE '%' || #{ searchValue } || '%'
		 	     		 	</if>
		 	     		 	<if test='searchCondition == "2"'>
		 	     		 		AND A.WARNING LIKE '%' || #{ searchValue } || '%'
		 	     		 	</if>
		 	     		 	<if test='searchCondition == "3"'>
		 	     		 		AND A.ACC_NAME LIKE '%' || #{ searchValue } || '%'
		 	     		 	</if>
		 	     		 </where>
		 	     	 ORDER BY A.ENROLL_DATE DESC
		 	    	  ) D
		 	    <![CDATA[
	        	WHERE ROWNUM <= #{ endRow } 
	        	]]>	
	        	) F
     			WHERE F.RNUM >= #{ startRow }
    </select>
    
    <select id="selectJandiMember" resultMap="jandiResultSet">
    	SELECT
    	       EMAIL
    	     , NICKNAME
    	     , PROFILE_PATH
    	     , ENROLL_DATE
    	  FROM JANDI_TBL
    	 WHERE EMAIL = #{ email }
    </select>
    
     <select id="managerMember" resultMap="managerResultSet" parameterType="ManagerDTO">
    
     SELECT
		       A.MNG_NO
			 , A.MNG_ID
			 , A.PASSWORD
			 , A.MNG_NAME
			 , A.CREATE_DATE
			 , A.IS_DELETED
			 , A.MNG_NICKNAME
		    FROM MANAGER_TBL A
    </select>

	<select id="selectTotalCount" resultType="_int" parameterType="hashMap">
		SELECT
		       COUNT(*)
		  FROM SSACK_TBL A
		  
		   <where>
		 	 <if test='searchCondition == "1"'>
		 	   A.NICKNAME LIKE '%' || #{ searchValue } || '%'
		 	 </if>
		 	 <if test='searchCondition == "2"'>
		 	   AND A.WARNING LIKE '%' || #{ searchValue } || '%'
		 	 </if>
		 	 <if test='searchCondition == "3"'>
		 	   AND A.IS_BLACK LIKE '%' || #{ searchValue } || '%'
		 	 </if>
		  </where>
	</select>
	
	<insert id="registMsMember" parameterType="ManagerDTO">
		INSERT
		  INTO MANAGER_TBL
		(
		  MNG_NO
		, MNG_ID
		, PASSWORD
		, MNG_NAME
		, CREATE_DATE
		, IS_DELETED
		, MNG_NICKNAME
		)
		VALUES
		(
		  SEQ_MANAGER_TBL.NEXTVAL
		, #{ mngId }
		, #{ password }
		, #{ mngName }
		, SYSDATE
		, 'N'
		, #{ mngNickName }
		)
	</insert>
	
	<select id="emailCheck" resultType="_int" parameterType="HashMap">
		SELECT
		       COUNT(*)
		  FROM MANAGER_TBL
		 WHERE MNG_ID = #{ email }
	</select>
	
	<select id="nickNameCheck" resultType="_int" parameterType="HashMap">
		SELECT
		       COUNT(*)
		  FROM MANAGER_TBL
		 WHERE MNG_NICKNAME = #{ nickName }
	</select>
	
	<!-- 카테고리 조회 -->
	<select id="selectCategory" resultMap="categoryResult">
		SELECT * FROM CATEGORY_TBL ORDER BY CATEGORY_CODE
	</select>
	
	<!-- 카테고리 추가 -->
	<insert id="modifycategory" parameterType="CategoryDTO">
	INSERT
	  INTO CATEGORY_TBL
	  (
	  	CATEGORY_CODE, CATEGORY_NAME
	  )
	VALUES
	( #{categoryCode}, #{categoryName} )
	</insert>
	
	<select id="checkCategory" resultMap="categoryResult">
	SELECT * FROM CATEGORY_TBL WHERE CATEGORY_CODE = ${ categoryCode }
	</select>
	
	<update id="changeCategoryName">
		update CATEGORY_TBL SET CATEGORY_NAME = #{categoryName} WHERE CATEGORY_CODE = #{categoryCode}
	</update> 
	
	<insert id="addnotice" parameterType="FaqDTO">
	INSERT INTO FAQ_TBL (POST_CODE, TITLE, CONTENTS, WRITE_DATE, IS_DELETED, MNG_NO)
		   VALUES (SEQ_FAQ_TBL.NEXTVAL, #{title}, #{contents}, SYSDATE, 'N', 1)		
	
	</insert>
	
	<select id="selectnotice" resultMap="faqResult">
		SELECT
       C.RNUM
     , C.POST_CODE
     , C.TITLE
     , C.CONTENTS
     , C.WRITE_DATE
     , C.IS_DELETED
     , C.MNG_NO
  FROM (SELECT ROWNUM RNUM   
             , B.POST_CODE
             , B.TITLE
             , B.CONTENTS
             , B.WRITE_DATE
             , B.IS_DELETED
             , B.MNG_NO
          FROM (SELECT  
               A.POST_CODE
             , A.TITLE
             , A.CONTENTS
             , A.WRITE_DATE
             , A.IS_DELETED
             , A.MNG_NO
             FROM FAQ_TBL A
              <where>
	 	 <if test='searchCondition == "title"'>
	 	  A.TITLE LIKE '%' || #{ searchValue } || '%'
	 	 </if>
	  </where>
              ORDER BY A.POST_CODE DESC
              ) B
               <![CDATA[
	        	WHERE ROWNUM <= #{ endRow } 
	        	]]>	
              ) C
              WHERE C.RNUM >= #{ startRow }	  
	</select>
	
	<select id="selectTotalCount2" resultType="_int" parameterType="hashMap">
		SELECT
		       COUNT(*)
		  FROM JANDI_TBL A
		  
		   <where>
		 	 <if test='searchCondition == "1"'>
		 	   A.NICKNAME LIKE '%' || #{ searchValue } || '%'
		 	 </if>
		 	 <if test='searchCondition == "2"'>
		 	   AND A.WARNING LIKE '%' || #{ searchValue } || '%'
		 	 </if>
		 	 <if test='searchCondition == "3"'>
		 	   AND A.IS_BLACK LIKE '%' || #{ searchValue } || '%'
		 	 </if>
		  </where>
	</select>
	
	<select id="noticeDetail" resultMap="faqResult">
	 SELECT * FROM FAQ_TBL WHERE POST_CODE = #{postCode}
	</select>
	
	<!-- 공지사항 수정 -->
	<update id="modifyContents">
		update FAQ_TBL SET CONTENTS = #{contents} WHERE POST_CODE = #{postCode}
	</update> 
	
	<!-- faq조회 페이징 처리 -->
	<select id="selectFaqTotalCount" resultType="_int" parameterType="hashMap">
	SELECT
	       COUNT(*)
	  FROM FAQ_TBL
	  
	   <where>
	 	 <if test='searchCondition == "title"'>
	 	   TITLE LIKE '%' || #{ searchValue } || '%'
	 	 </if>
	  </where>
	</select>
	
	<!-- 공지사항 비활성화 -->
	<update id="disabledContents">
		UPDATE FAQ_TBL
		   SET IS_DELETED = 'Y'
		 WHERE POST_CODE = #{ postCode}  
	</update>
	
	<!-- 공지사항 활성화 -->
	<update id="enabledContents">
		UPDATE FAQ_TBL
		   SET IS_DELETED = 'N'
		 WHERE POST_CODE = #{postCode}  
	</update>
	
	<update id="inactivemanager" parameterType="java.util.ArrayList">
		UPDATE MANAGER_TBL
		   SET IS_DELETED = 'Y'
		 WHERE MNG_NO IN (
        <foreach collection="list" item="item" index="index" separator=",">
           #{ item }
        </foreach>
   		 )
	</update>
	
	
	<select id="allContent" resultMap="purchaseClassSet">
		 SELECT *
		  FROM (SELECT *
				  FROM (SELECT * 
           				   FROM PAYMENT_TBL P
          				   JOIN purchase_class_tbl PC ON (PC.PAY_CODE = P.PAY_CODE)
          				   JOIN CLASS_TBL CT ON (PC.CLASS_CODE = CT.CLASS_CODE)))
	
	</select>
	
	 <select id="selectPurchaseClass" resultMap="purchaseClassSet" parameterType="HashMap">
	 
	  SELECT V2.RNUM
             , V2.*
		  FROM (SELECT ROWNUM RNUM
		              , V.*
				  FROM (SELECT * 
           				   FROM PAYMENT_TBL P
          				   JOIN purchase_class_tbl PC ON (PC.PAY_CODE = P.PAY_CODE)
          				   JOIN CLASS_TBL CT ON (PC.CLASS_CODE = CT.CLASS_CODE)
          				   LEFT JOIN CALCULATE_TBL CTB ON (PC.CLASS_PURC_CODE = CTB.CLASS_PURC_CODE)
          				  <where> 
						    	 <if test='(startDate != "" and startDate != null) and searchCondition != null'>
						    		 CTB.CLASS_PURC_CODE IS NULL
						    		 AND P.PAY_DATE BETWEEN TO_DATE('${startDate}', 'YY-MM-DD') 
						       	          AND TO_DATE('${endDate}', 'YY-MM-DD')+1
						       	      <if test='searchCondition == "1"'>
									 	    AND PC.EMAIL LIKE '%' || #{ searchValue } || '%'
									 </if>
									 <if test='searchCondition == "2"'>
									 	   AND CT.TITLE LIKE '%' || #{ searchValue } || '%'
									 </if>
						     	 </if>
						     	 
						     	 <if test='(startDate != "" and startDate != null) and searchCondition == null'>
						    		CTB.CLASS_PURC_CODE IS NULL
						    		 AND P.PAY_DATE BETWEEN TO_DATE('${startDate}', 'YY-MM-DD') 
						       	          AND TO_DATE('${endDate}', 'YY-MM-DD')+1
						     	 </if>
						     	 
						     	 <if test='(startDate =="" or startDate == null) and searchCondition != null'>
						    		CTB.CLASS_PURC_CODE IS NULL
						    		<if test='searchCondition == "1"'>
									 	  AND PC.EMAIL LIKE '%' || #{ searchValue } || '%'
									 </if>
									 <if test='searchCondition == "2"'>
									 	  AND CT.TITLE LIKE '%' || #{ searchValue } || '%'
									 </if>
						     	 </if>
						     	 
						     	 <if test='(startDate =="" or startDate == null) and searchCondition == null'>
						     	 	CTB.CLASS_PURC_CODE IS NULL
						     	 </if>
						     	
						     </where>
	 						ORDER BY PC.CLASS_PURC_CODE DESC )V)V2
	 						WHERE V2.RNUM BETWEEN ${ startRow } AND ${ endRow }
	</select>
	
	<select id="PurchaseClassTotalCount" resultType="_int" parameterType="hashMap">
		SELECT 
		       COUNT(*)
          FROM (SELECT ROWNUM RNUM
		             , V.* 
           	 	  FROM (SELECT * 
           				   FROM PAYMENT_TBL P
          				   JOIN purchase_class_tbl PC ON (PC.PAY_CODE = P.PAY_CODE)
          				   JOIN CLASS_TBL CT ON (PC.CLASS_CODE = CT.CLASS_CODE)
						    LEFT JOIN CALCULATE_TBL CTB ON (PC.CLASS_PURC_CODE = CTB.CLASS_PURC_CODE)
						     <where> 
						    	 <if test='(startDate != "" and startDate != null) and searchCondition != null'>
						    		 CTB.CLASS_PURC_CODE IS NULL
						    		 AND P.PAY_DATE BETWEEN TO_DATE('${startDate}', 'YY-MM-DD') 
						       	          AND TO_DATE('${endDate}', 'YY-MM-DD')+1
						       	      <if test='searchCondition == "1"'>
									 	    AND PC.EMAIL LIKE '%' || #{ searchValue } || '%'
									 </if>
									 <if test='searchCondition == "2"'>
									 	   AND CT.TITLE LIKE '%' || #{ searchValue } || '%'
									 </if>
						     	 </if>
						     	 
						     	 <if test='(startDate != "" and startDate != null) and searchCondition == null'>
						    		CTB.CLASS_PURC_CODE IS NULL
						    		 AND P.PAY_DATE BETWEEN TO_DATE('${startDate}', 'YY-MM-DD') 
						       	          AND TO_DATE('${endDate}', 'YY-MM-DD')+1
						     	 </if>
						     	 
						     	 <if test='(startDate =="" or startDate == null) and searchCondition != null'>
						    		CTB.CLASS_PURC_CODE IS NULL
						    		<if test='searchCondition == "1"'>
									 	  AND PC.EMAIL LIKE '%' || #{ searchValue } || '%'
									 </if>
									 <if test='searchCondition == "2"'>
									 	  AND CT.TITLE LIKE '%' || #{ searchValue } || '%'
									 </if>
						     	 </if>
						     	 
						     	 <if test='(startDate =="" or startDate == null) and searchCondition == null'>
						     	 	CTB.CLASS_PURC_CODE IS NULL
						     	 </if>
						     	
						     </where>)V)V2
	
	</select>
	
	<select id="selectReportSsackTotalCount" resultType="_int" parameterType="hashMap">
		SELECT
		       COUNT(*)
		  FROM REPORT_MEMBER_TBL R
		  JOIN REPORT_STATEMENT_TBL S ON(S.REP_TYPE_CODE = R.REP_TYPE_CODE)
		  JOIN SSACK_TBL A ON(A.EMAIL = R.REP_EMAIL)
          <where>
		 	<if test="searchCondition == 1">
		 		R.REP_EMAIL LIKE '%' || #{ searchValue } || '%'
		 	</if>
		 	<if test="searchCondition == 2">
		 		AND A.NICKNAME LIKE '%' || #{ searchValue } || '%'
		 	</if>
		 	<if test="searchCondition == 3">
		 		AND R.CONTENTS LIKE '%' || #{ searchValue } || '%'
		 	</if>
		 	<if test="searchCondition == 4">
		 		AND R.REP_YN LIKE '%' || #{ searchValue } || '%'
		 	</if>
		 </where>
	</select>
	
	<select id="selectReportMemberList" resultMap="reportMemberResultSet">
		SELECT
		       F.RNUM
		     , F.REP_CODE
		     , F.EMAIL
		     , F.CONTENTS
		     , F.REP_DATE
		     , F.REP_EMAIL
		     , F.REP_TYPE_CODE
		     , F.IMG_PATH
		     , F.REP_YN
		     , F.REP_TYPE
		     , F.NICKNAME
		  FROM (SELECT ROWNUM RNUM 
		             , D.REP_CODE
		             , D.EMAIL
		             , D.CONTENTS
		             , D.REP_DATE
		             , D.REP_EMAIL
		             , D.REP_TYPE_CODE
		             , D.IMG_PATH
		             , D.REP_YN
		             , D.REP_TYPE
		             , D.NICKNAME
		          FROM (SELECT
		                       R.REP_CODE
		                     , R.EMAIL
		                     , R.CONTENTS
		                     , R.REP_DATE
		                     , R.REP_EMAIL
		                     , R.REP_TYPE_CODE
		                     , R.IMG_PATH
		                     , R.REP_YN
		                     , S.REP_TYPE
		                     , A.NICKNAME
		                  FROM REPORT_MEMBER_TBL R
		                  JOIN REPORT_STATEMENT_TBL S ON(S.REP_TYPE_CODE = R.REP_TYPE_CODE)
		                  JOIN SSACK_TBL A ON(A.EMAIL = R.REP_EMAIL)
		                  <where>
		 	     		 	<if test="searchCondition == 1">
		 	     		 		R.REP_EMAIL LIKE '%' || #{ searchValue } || '%'
		 	     		 	</if>
		 	     		 	<if test="searchCondition == 2">
		 	     		 		AND A.NICKNAME LIKE '%' || #{ searchValue } || '%'
		 	     		 	</if>
		 	     		 	<if test="searchCondition == 3">
		 	     		 		AND R.CONTENTS LIKE '%' || #{ searchValue } || '%'
		 	     		 	</if>
		 	     		 	<if test="searchCondition == 4">
		 	     		 		AND R.REP_YN LIKE '%' || #{ searchValue } || '%'
		 	     		 	</if>
		 	     		 </where>
		 	     	 ORDER BY R.REP_DATE DESC
		 	    	  ) D
		 	    <![CDATA[
	        	WHERE ROWNUM <= #{ endRow } 
	        	]]>	
	        	) F
     			WHERE F.RNUM >= #{ startRow }
	</select>
	
		<select id="selectReportClassTotalCount" resultType="_int" parameterType="hashMap">
		SELECT
		       COUNT(*)
		  FROM REPORT_CLASS_TBL R
		  JOIN REPORT_STATEMENT_TBL S ON(S.REP_TYPE_CODE = R.REP_TYPE_CODE)
		  JOIN CLASS_TBL C ON(C.CLASS_CODE = R.CLASS_CODE)
		  JOIN JANDI_TBL A ON(A.EMAIL = C.EMAIL)

          <where>
		 	<if test="searchCondition == 1">
		 		C.TITLE LIKE '%' || #{ searchValue } || '%'
		 	</if>
		 	<if test="searchCondition == 2">
		 		AND A.NICKNAME LIKE '%' || #{ searchValue } || '%'
		 	</if>
		 	<if test="searchCondition == 3">
		 		AND R.REP_CONTENTS LIKE '%' || #{ searchValue } || '%'
		 	</if>
		 	<if test="searchCondition == 3">
		 		AND R.REP_YN LIKE '%' || #{ searchValue } || '%'
		 	</if>
		 </where>
	</select>
	
		<select id="selectReportClassList" resultMap="reportClassResultSet">
		SELECT
		       F.RNUM
		     , F.REP_CODE
		     , F.EMAIL
		     , F.REP_CONTENTS
		     , F.CLASS_CODE
		     , F.REP_DATE
		     , F.REP_TYPE_CODE
		     , F.REP_YN
		     , F.REP_TYPE
		     , F.TITLE
		     , F.NICKNAME
		  FROM (SELECT ROWNUM RNUM 
		             , D.REP_CODE
		             , D.EMAIL
		             , D.REP_CONTENTS
		             , D.CLASS_CODE
		             , D.REP_DATE
		             , D.REP_TYPE_CODE
		             , D.REP_YN
		             , D.REP_TYPE
		             , D.TITLE
		             , D.NICKNAME
		          FROM (SELECT
		                       R.REP_CODE
		                     , R.EMAIL
		                     , R.REP_CONTENTS
		                     , R.CLASS_CODE
		                     , R.REP_DATE
		                     , R.REP_TYPE_CODE
		                     , R.REP_YN
		                     , S.REP_TYPE
		                     , C.TITLE
		                     , A.NICKNAME
		                  FROM REPORT_CLASS_TBL R
		                  JOIN REPORT_STATEMENT_TBL S ON(S.REP_TYPE_CODE = R.REP_TYPE_CODE)
		                  JOIN CLASS_TBL C ON(C.CLASS_CODE = R.CLASS_CODE)
		                  JOIN JANDI_TBL A ON(A.EMAIL = C.EMAIL)
		                  <where>
		 	     		 	<if test="searchCondition == 1">
		 	     		 		C.TITLE LIKE '%' || #{ searchValue } || '%'
		 	     		 	</if>
		 	     		 	<if test="searchCondition == 2">
		 	     		 		AND A.NICKNAME LIKE '%' || #{ searchValue } || '%'
		 	     		 	</if>
		 	     		 	<if test="searchCondition == 3">
		 	     		 		AND R.REP_CONTENTS LIKE '%' || #{ searchValue } || '%'
		 	     		 	</if>
		 	     		 	<if test="searchCondition == 3">
		 	     		 		AND R.REP_YN LIKE '%' || #{ searchValue } || '%'
		 	     		 	</if>
		 	     		 </where>
		 	     	 ORDER BY R.REP_DATE DESC
		 	    	  ) D
		 	    <![CDATA[
	        	WHERE ROWNUM <= #{ endRow } 
	        	]]>	
	        	) F
     			WHERE F.RNUM >= #{ startRow }	
	</select>
	
	<select id="selectRepMemberList" resultMap="reportMemberResultSet">
		SELECT
		       R.EMAIL
		     , R.REP_CODE
		     , R.CONTENTS
		     , R.REP_DATE
		     , R.REP_EMAIL
		     , R.REP_TYPE_CODE
		     , R.IMG_PATH
		     , R.REP_YN
		     , S.REP_TYPE
		     , A.NICKNAME
		  FROM REPORT_MEMBER_TBL R
		  JOIN REPORT_STATEMENT_TBL S ON(S.REP_TYPE_CODE = R.REP_TYPE_CODE)
		  JOIN SSACK_TBL A ON(A.EMAIL = R.REP_EMAIL)
		 WHERE R.REP_CODE = #{ repCode }
	</select>
	
	<update id="modifyConfirmMember" parameterType="ReportMemberDTO">
		UPDATE REPORT_MEMBER_TBL
		   SET REP_YN = 'Y'
		 WHERE REP_CODE = #{ repCode }
	</update>
	
	<update id="modifySendbackMember" parameterType="ReportMemberDTO">
		UPDATE REPORT_MEMBER_TBL
		   SET REP_YN = 'N'
		 WHERE REP_CODE = #{ repCode }
	</update>
	
	<update id="modifyConfirmClass" parameterType="ReportClassDTO">
		UPDATE REPORT_CLASS_TBL
		   SET REP_YN = 'Y'
		 WHERE REP_CODE = #{ repCode }
	</update>

	<update id="modifySendbackClass" parameterType="ReportClassDTO">
		UPDATE REPORT_CLASS_TBL
		   SET REP_YN = 'N'
		 WHERE REP_CODE = #{ repCode }
	</update>
	
	<select id="selectRepClass" resultMap="reportClassResultSet">
		SELECT
		       R.REP_CODE
		     , R.EMAIL
		     , R.REP_CONTENTS
		     , R.CLASS_CODE
		     , R.REP_DATE
		     , R.REP_TYPE_CODE
		     , R.REP_YN
		     , S.REP_TYPE
		     , C.CATEGORY_NAME
		     , CL.TITLE
		     , J.NICKNAME
		 FROM REPORT_CLASS_TBL R
		 JOIN REPORT_STATEMENT_TBL S ON(S.REP_TYPE_CODE = R.REP_TYPE_CODE)
		 JOIN CLASS_TBL CL ON (CL.CLASS_CODE = R.CLASS_CODE)
		 JOIN CATEGORY_TBL C ON (C.CATEGORY_CODE = CL.CATEGORY_CODE)
		 JOIN JANDI_TBL J ON(J.EMAIL = CL.EMAIL)
		WHERE R.REP_CODE = #{ repCode }
	</select>
	
	<insert id="classcal" parameterType="CalculateDTO">
	INSERT
	  INTO Calculate_TBL
	  (
	  	CALC_CODE, FEES,EMAIL,CLASS_PURC_CODE,CAL_DATE
	  )
	VALUES
	( SEQ_CALCULATE_TBL.NEXTVAL, #{fees},#{email},#{classPurchaseCode},SYSDATE  )
	</insert>

	<!-- 정산된 내역 페이징 처리 위한 갯수 -->
	<select id="finishClassTotalCount" resultType="_int" parameterType="hashMap">
		SELECT 
		       COUNT(*)
          FROM (SELECT ROWNUM RNUM
		             , V.* 
           	 	  FROM (SELECT * 
           				   FROM PAYMENT_TBL P
          				   JOIN purchase_class_tbl PC ON (PC.PAY_CODE = P.PAY_CODE)
          				   JOIN CLASS_TBL CT ON (PC.CLASS_CODE = CT.CLASS_CODE)
          				   LEFT JOIN CALCULATE_TBL CTB ON (PC.CLASS_PURC_CODE = CTB.CLASS_PURC_CODE)
						     <where> 
						    	 <if test='(startDate != "" and startDate != null) and searchCondition != null'>
						    		 CTB.CLASS_PURC_CODE IS NOT NULL
						    		 AND P.PAY_DATE BETWEEN TO_DATE('${startDate}', 'YY-MM-DD') 
						       	          AND TO_DATE('${endDate}', 'YY-MM-DD')+1
						       	      <if test='searchCondition == "1"'>
									 	    AND PC.EMAIL LIKE '%' || #{ searchValue } || '%'
									 </if>
									 <if test='searchCondition == "2"'>
									 	   AND CT.TITLE LIKE '%' || #{ searchValue } || '%'
									 </if>
						     	 </if>
						     	 
						     	 <if test='(startDate != "" and startDate != null) and searchCondition == null'>
						    		CTB.CLASS_PURC_CODE IS NOT NULL
						    		 AND P.PAY_DATE BETWEEN TO_DATE('${startDate}', 'YY-MM-DD') 
						       	          AND TO_DATE('${endDate}', 'YY-MM-DD')+1
						     	 </if>
						     	 
						     	 <if test='(startDate =="" or startDate == null) and searchCondition != null'>
						    		CTB.CLASS_PURC_CODE IS NOT NULL
						    		<if test='searchCondition == "1"'>
									 	  AND PC.EMAIL LIKE '%' || #{ searchValue } || '%'
									 </if>
									 <if test='searchCondition == "2"'>
									 	  AND CT.TITLE LIKE '%' || #{ searchValue } || '%'
									 </if>
						     	 </if>
						     	 
						     	 <if test='(startDate =="" or startDate == null) and searchCondition == null'>
						     	 	CTB.CLASS_PURC_CODE IS NOT NULL
						     	 </if>
						     	
						     </where>)V)V2
	
	</select>
	
	<!-- 정산 완료 내역 데이터 조회 -->
	<select id="selectfinishClass" resultMap="purchaseClassSet" parameterType="HashMap">
	 
	  SELECT V2.RNUM
             , V2.*
		  FROM (SELECT ROWNUM RNUM
		              , V.*
				  FROM (SELECT * 
           				   FROM PAYMENT_TBL P
          				   JOIN purchase_class_tbl PC ON (PC.PAY_CODE = P.PAY_CODE)
          				   JOIN CLASS_TBL CT ON (PC.CLASS_CODE = CT.CLASS_CODE)
          				   LEFT JOIN CALCULATE_TBL CTB ON (PC.CLASS_PURC_CODE = CTB.CLASS_PURC_CODE)
          				  <where> 
						    	 <if test='(startDate != "" and startDate != null) and searchCondition != null'>
						    		 CTB.CLASS_PURC_CODE IS NOT NULL
						    		 AND P.PAY_DATE BETWEEN TO_DATE('${startDate}', 'YY-MM-DD') 
						       	          AND TO_DATE('${endDate}', 'YY-MM-DD')+1
						       	      <if test='searchCondition == "1"'>
									 	    AND PC.EMAIL LIKE '%' || #{ searchValue } || '%'
									 </if>
									 <if test='searchCondition == "2"'>
									 	   AND CT.TITLE LIKE '%' || #{ searchValue } || '%'
									 </if>
						     	 </if>
						     	 
						     	 <if test='(startDate != "" and startDate != null) and searchCondition == null'>
						    		CTB.CLASS_PURC_CODE IS NOT NULL
						    		 AND P.PAY_DATE BETWEEN TO_DATE('${startDate}', 'YY-MM-DD') 
						       	          AND TO_DATE('${endDate}', 'YY-MM-DD')+1
						     	 </if>
						     	 
						     	 <if test='(startDate =="" or startDate == null) and searchCondition != null'>
						    		CTB.CLASS_PURC_CODE IS NOT NULL
						    		<if test='searchCondition == "1"'>
									 	  AND PC.EMAIL LIKE '%' || #{ searchValue } || '%'
									 </if>
									 <if test='searchCondition == "2"'>
									 	  AND CT.TITLE LIKE '%' || #{ searchValue } || '%'
									 </if>
						     	 </if>
						     	 
						     	 <if test='(startDate =="" or startDate == null) and searchCondition == null'>
						     	 	CTB.CLASS_PURC_CODE IS NOT NULL
						     	 </if>
						     </where>
	 						ORDER BY PC.CLASS_PURC_CODE DESC )V)V2
	 						WHERE V2.RNUM BETWEEN ${ startRow } AND ${ endRow }
	</select>

	<select id="selectRepMember" resultMap="ssackResultSet">
		SELECT
		       S.EMAIL
		     , S.NICKNAME
		     , S.WARNING
		     , S.IS_BLACK
		     , S.BLACK_END_DATE
		  FROM SSACK_TBL S
		  JOIN REPORT_MEMBER_TBL R ON(R.REP_EMAIL = S.EMAIL)
		 WHERE R.REP_EMAIL = #{ repEmail }
		   AND R.REP_CODE = #{ repCode }
	</select>
	
	<update id="updateMemberWarning" parameterType="MemberDTO">
		UPDATE SSACK_TBL S
		   SET S.WARNING = S.WARNING + 1
		 WHERE EMAIL = #{ email }
	</update>
	
	<update id="updateMemberBlack" parameterType="MemberDTO">
		UPDATE SSACK_TBL S
		   SET S.IS_BLACK = 'Y'
		     , S.BLACK_END_DATE = SYSDATE + 30
		 WHERE EMAIL = #{ email }
	</update>
	
 	<select id="selectReportClass" resultType="hashmap">
		SELECT
			   C.CLASS_CODE
			 , C.EMAIL
			 , J.NICKNAME
			 , S.WARNING
			 , S.IS_BLACK
		  FROM CLASS_TBL C
		  JOIN JANDI_TBL J ON(J.EMAIL = C.EMAIL)
		  JOIN REPORT_CLASS_TBL R ON(R.CLASS_CODE = C.CLASS_CODE)
		  JOIN SSACK_TBL S ON(S.EMAIL = C.EMAIL)
		 WHERE R.REP_CODE = #{ repCode }
	</select>
	
	<update id="updateClassWarning">
		UPDATE SSACK_TBL S
		   SET S.WARNING = S.WARNING + 1
		 WHERE EMAIL = #{ EMAIL }
	</update>
	
	<update id="updateClassBlack">
		UPDATE SSACK_TBL S
		   SET S.IS_BLACK = 'Y'
		     , S.BLACK_END_DATE = SYSDATE + 30
		 WHERE EMAIL = #{ EMAIL }
	</update>
	
</mapper>