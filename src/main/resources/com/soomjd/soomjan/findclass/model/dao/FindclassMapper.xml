<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soomjd.soomjan.findclass.model.dao.FindclassMapper">
    
    <resultMap type="FindClassDTO" id="findClassResultMap">
    	<result column="CLASS_CODE" property="classCode"/>
    	<result column="CREATE_DATE" property="createDate"/>
    	<result column="TAG" property="tag"/>
    	<result column="TITLE" property="title"/>
    	<result column="PRICE" property="price"/>
    	<result column="FILE_PATH" property="filePath"/>
    	<result column="PROFILE_PATH" property="profilePath"/>
    	<result column="NICKNAME" property="nickName"/>
    	<result column="CATEGORY_NAME" property="categoryName"/>
    	<result column="AVGSTAR" property="avgStar"/>
    	<result column="RVCOUNT" property="rvCount"/>
    </resultMap>
    
    <resultMap type="categoryDTO" id="categoryResultMap">
        <result column="CATEGORY_CODE" property="categoryCode"/>
        <result column="CATEGORY_NAME" property="categoryName"/>
    </resultMap>
    
    <select id="selectFindClassTotalCount" resultType="_int" parameterType="HashMap">
        SELECT
		       COUNT(*)
		  FROM CLASS_TBL A
	      JOIN JANDI_TBL B ON (A.EMAIL = B.EMAIL)
          JOIN CATEGORY_TBL C ON (A.CATEGORY_CODE = C.CATEGORY_CODE)
		 <where>
		 A.IS_DELETED = 'N'
		 <if test='categoryCode != null'>
		   AND C.CATEGORY_CODE = #{ categoryCode }
		 </if>
		 <if test='searchValue != null'>
		   AND ((A.TITLE LIKE '%' || #{ searchValue } || '%')
	       OR (A.TAG LIKE '%' || #{ searchValue } || '%')
	       OR (B.NICKNAME LIKE '%' || #{ searchValue } || '%')
	       OR (C.CATEGORY_NAME LIKE '%' || #{ searchValue } || '%'))
		  </if>
		 </where>
    
    </select>
    
    <!-- 현재 운영중인 전체 클래스 조회 by 권순표 -->
    <select id="selectfindclass" resultMap="findClassResultMap" parameterType="HashMap">
    	SELECT V2.RNUM
		     , V2.CLASS_CODE
		     , V2.CREATE_DATE 
		     , V2.TAG 
		     , V2.TITLE 
		     , V2.PRICE 
		     , V2.FILE_PATH
		     , V2.VIEWS
		     , V2.PROFILE_PATH
		     , V2.NICKNAME 
		     , V2.CATEGORY_NAME
		     , V2.AVGSTAR
		     , V2.RVCOUNT
		  FROM (SELECT ROWNUM RNUM
				     , V.CLASS_CODE
				     , V.CREATE_DATE 
				     , V.TAG 
				     , V.TITLE 
				     , V.PRICE 
				     , V.FILE_PATH
				     , V.VIEWS
				     , V.PROFILE_PATH
				     , V.NICKNAME 
				     , V.CATEGORY_NAME
				     , V.AVGSTAR
				     , V.RVCOUNT
				  FROM (SELECT A.CLASS_CODE
						     , A.CREATE_DATE 
						     , A.TAG 
						     , A.TITLE 
						     , A.PRICE 
						     , A.FILE_PATH
						     , A.VIEWS
						     , B.PROFILE_PATH
						     , B.NICKNAME 
						     , C.CATEGORY_NAME
						     , NVL(AVG(D.STAR), 0) AVGSTAR
						     , COUNT(D.REVIEW_CODE) RVCOUNT
						  FROM CLASS_TBL A
						  JOIN JANDI_TBL B ON (A.EMAIL = B.EMAIL)
						  JOIN CATEGORY_TBL C ON (A.CATEGORY_CODE = C.CATEGORY_CODE)
						  LEFT JOIN CLASS_REVIEW_TBL D ON (A.CLASS_CODE = D.CLASS_CODE)
						  <where>
						  A.IS_DELETED = 'N'
						  <if test='categoryCode != null'>
						  AND C.CATEGORY_CODE = #{ categoryCode }
						  </if>
						  <if test='searchValue != null'>
						  AND ((A.TITLE LIKE '%' || #{ searchValue } || '%')
					      OR (A.TAG LIKE '%' || #{ searchValue } || '%')
					      OR (B.NICKNAME LIKE '%' || #{ searchValue } || '%')
					      OR (C.CATEGORY_NAME LIKE '%' || #{ searchValue } || '%'))
						  </if>
						  </where>
						 GROUP BY A.CLASS_CODE , A.CREATE_DATE , A.TAG , A.TITLE , A.PRICE , A.VIEWS
						        , A.FILE_PATH , B.PROFILE_PATH , B.NICKNAME , C.CATEGORY_NAME
						 <if test='searchCondition == "1"'>
						 ORDER BY A.CREATE_DATE DESC
						 </if>
						 <if test='searchCondition == "2"'>
						 ORDER BY A.VIEWS DESC
						 </if>
						 <if test='searchCondition == "3"'>
						 ORDER BY AVGSTAR DESC
						 </if>
						 <if test='searchCondition == "4"'>
						 ORDER BY AVGSTAR ASC
						 </if>
				      ) V
			  ) V2
		 WHERE V2.RNUM BETWEEN #{ selectCriteria.startRow } AND #{ selectCriteria.endRow }
    </select>
    
    <!-- 전체 카테고리 정보 조회 by 권순표 -->
    <select id="selectCategory" resultMap="categoryResultMap">
        SELECT
		       CATEGORY_NAME
		     , CATEGORY_CODE
		  FROM CATEGORY_TBL
    </select>
   
   <!-- 인기 클래스 정보 조회 by 권순표 -->
    <select id="selectTopClass" resultMap="findClassResultMap" parameterType="Hashmap">
        SELECT V2.RNUM
             , V2.CLASS_CODE
             , V2.CREATE_DATE 
             , V2.TAG 
             , V2.TITLE 
             , V2.PRICE 
             , V2.FILE_PATH
             , V2.VIEWS
             , V2.PROFILE_PATH
             , V2.NICKNAME 
             , V2.CATEGORY_NAME
             , V2.AVGSTAR
             , V2.RVCOUNT
		  FROM (SELECT ROWNUM RNUM
		             , V.CLASS_CODE
		             , V.CREATE_DATE 
		             , V.TAG 
		             , V.TITLE 
		             , V.PRICE 
		             , V.FILE_PATH
		             , V.VIEWS
		             , V.PROFILE_PATH
		             , V.NICKNAME 
		             , V.CATEGORY_NAME
		             , V.AVGSTAR
		             , V.RVCOUNT
				  FROM (SELECT A.CLASS_CODE
						     , A.CREATE_DATE 
						     , A.TAG 
						     , A.TITLE 
						     , A.PRICE 
						     , A.FILE_PATH
						     , A.VIEWS 
						     , B.PROFILE_PATH
						     , B.NICKNAME 
						     , C.CATEGORY_NAME
						     , NVL(AVG(D.STAR), 0) AVGSTAR
						     , COUNT(D.REVIEW_CODE) RVCOUNT
						  FROM CLASS_TBL A
						  JOIN JANDI_TBL B ON (A.EMAIL = B.EMAIL)
						  JOIN CATEGORY_TBL C ON (A.CATEGORY_CODE = C.CATEGORY_CODE)
						  LEFT JOIN CLASS_REVIEW_TBL D ON (A.CLASS_CODE = D.CLASS_CODE)
						  <where> 
						  A.IS_DELETED = 'N'
						  <if test='categoryCode != null'>
						  AND C.CATEGORY_CODE = #{ categoryCode }
						  </if>
						  </where>
						 GROUP BY A.CLASS_CODE , A.CREATE_DATE , A.TAG , A.TITLE , A.PRICE , A.VIEWS 
						        , A.FILE_PATH , B.PROFILE_PATH , B.NICKNAME , C.CATEGORY_NAME
						 ORDER BY A.VIEWS DESC
                       )V
                )V2
         WHERE V2.RNUM BETWEEN 1 AND 9
    </select>
	

</mapper>